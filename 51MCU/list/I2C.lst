C51 COMPILER V9.00   I2C                                                                   08/09/2015 16:36:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN ..\Output\I2C.obj
COMPILER INVOKED BY: D:\keil c51\C51\BIN\C51.EXE ..\src\I2C.c LARGE BROWSE INCDIR(..\inc;D:\keil c51\C51\INC) DEBUG OBJE
                    -CTEXTEND PRINT(..\list\I2C.lst) OBJECT(..\Output\I2C.obj)

line level    source

   1          #include <Var.h>
   2          
   3          void I2C_Start()                                //I2C∆ º–≈∫≈
   4          {
   5   1          SDA = 1;                    //¿≠∏ﬂ ˝æ›œﬂ
   6   1          SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
   7   1          delay_us(5,T0);                 //—” ±
   8   1          SDA = 0;                    //≤˙…˙œ¬Ωµ—ÿ
   9   1          delay_us(5,T0);                 //—” ±
  10   1          SCL = 0;                    //¿≠µÕ ±÷”œﬂ
  11   1      }
  12          
  13          void I2C_Stop()                                 //I2CÕ£÷π–≈∫≈
  14          {
  15   1          SDA = 0;                    //¿≠µÕ ˝æ›œﬂ
  16   1          SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
  17   1          delay_us(5,T0);                 //—” ±
  18   1          SDA = 1;                    //≤˙…˙…œ…˝—ÿ
  19   1          delay_us(5,T0);                 //—” ±
  20   1      }
  21          
  22          
  23          void I2C_SendACK(bit ack)               //I2C∑¢ÀÕ”¶¥–≈∫≈ »Îø⁄≤Œ ˝:ack (0:ACK 1:NAK)
  24          {
  25   1          SDA = ack;                  //–¥”¶¥–≈∫≈
  26   1          SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
  27   1          delay_us(5,T0);                 //—” ±
  28   1          SCL = 0;                    //¿≠µÕ ±÷”œﬂ
  29   1          delay_us(5,T0);                 //—” ±
  30   1      }
  31          
  32          bit I2C_RecvACK()                               //I2CΩ” ’”¶¥–≈∫≈
  33          {
  34   1              SDA = 1;
  35   1          SCL = 1;                    //¿≠∏ﬂ ±÷”œﬂ
  36   1          delay_us(5,T0);                 //—” ±
  37   1          CY = SDA;                   //∂¡”¶¥–≈∫≈
  38   1          SCL = 0;                    //¿≠µÕ ±÷”œﬂ
  39   1          delay_us(5,T0);                 //—” ±
  40   1      
  41   1          return CY;
  42   1      }
  43          
  44          void I2C_SendByte(unsigned char dat)    //œÚI2C◊‹œﬂ∑¢ÀÕ“ª∏ˆ◊÷Ω⁄ ˝æ›
  45          {
  46   1          unsigned char i;
  47   1          for (i=0; i<8; i++)         //8Œªº∆ ˝∆˜
  48   1          {
  49   2              if((dat <<i)&0x80)              
  50   2                      {
  51   3                      SDA = 1;               //ÀÕ ˝æ›ø⁄
  52   3                      }
  53   2                      else
  54   2                      {
C51 COMPILER V9.00   I2C                                                                   08/09/2015 16:36:32 PAGE 2   

  55   3                              SDA = 0;
  56   3                      }
  57   2              SCL = 1;                //¿≠∏ﬂ ±÷”œﬂ
  58   2              delay_us(5,T0);             //—” ±
  59   2              SCL = 0;                //¿≠µÕ ±÷”œﬂ
  60   2              delay_us(5,T0);             //—” ±
  61   2          }
  62   1          I2C_RecvACK();
  63   1      }
  64          
  65          unsigned char I2C_RecvByte()                    //¥”I2C◊‹œﬂΩ” ’“ª∏ˆ◊÷Ω⁄ ˝æ›
  66          {
  67   1          unsigned char i;
  68   1          unsigned char dat = 0;
  69   1      
  70   1          SDA = 1;                    // πƒ‹ƒ⁄≤ø…œ¿≠,◊º±∏∂¡»° ˝æ›,
  71   1          for (i=0; i<8; i++)         //8Œªº∆ ˝∆˜
  72   1          {
  73   2                      SCL = 0;
  74   2                      delay_us(5,T0);             //—” ±
  75   2              SCL = 1;                //¿≠∏ﬂ ±÷”œﬂ
  76   2              delay_us(5,T0);             //—” ±
  77   2                      dat <<= 1;
  78   2              dat |= SDA;             //∂¡ ˝æ›               
  79   2          }
  80   1              SCL = 0;
  81   1      
  82   1          return dat;
  83   1      }
  84          
  85          void Single_WriteI2C(unsigned char SlaveAddress,unsigned char REG_Address,unsigned char REG_data)          //œÚI
             -2C…Ë±∏–¥»Î“ª∏ˆ◊÷Ω⁄ ˝æ›
  86          {
  87   1          I2C_Start();                  //∆ º–≈∫≈
  88   1          I2C_SendByte(SlaveAddress);   //∑¢ÀÕ…Ë±∏µÿ÷∑+–¥–≈∫≈
  89   1          I2C_SendByte(REG_Address);    //ƒ⁄≤øºƒ¥Ê∆˜µÿ÷∑£¨
  90   1          I2C_SendByte(REG_data);       //ƒ⁄≤øºƒ¥Ê∆˜ ˝æ›£¨
  91   1          I2C_Stop();                   //∑¢ÀÕÕ£÷π–≈∫≈
  92   1      }
  93          
  94          unsigned char Single_ReadI2C(unsigned char SlaveAddress,unsigned char REG_Address)         //¥”I2C…Ë±∏∂¡»°“ª∏ˆ◊
             -÷Ω⁄ ˝æ›
  95          {
  96   1              unsigned char REG_data;
  97   1      
  98   1              I2C_Start();                   //∆ º–≈∫≈
  99   1              I2C_SendByte(SlaveAddress);    //∑¢ÀÕ…Ë±∏µÿ÷∑+–¥–≈∫≈
 100   1              I2C_SendByte(REG_Address);     //∑¢ÀÕ¥Ê¥¢µ•‘™µÿ÷∑£¨¥”0ø™ º      
 101   1              I2C_Start();                   //∆ º–≈∫≈
 102   1              I2C_SendByte(SlaveAddress+1);  //∑¢ÀÕ…Ë±∏µÿ÷∑+∂¡–≈∫≈
 103   1              REG_data=I2C_RecvByte();       //∂¡≥ˆºƒ¥Ê∆˜ ˝æ›
 104   1              I2C_SendACK(1);                //Ω” ’”¶¥–≈∫≈
 105   1              I2C_Stop();                    //Õ£÷π–≈∫≈
 106   1      
 107   1              return REG_data;
 108   1      }
 109          
 110          //      Single_WriteI2C(0xae,4,5);
 111          //      delay_ms(50,T0);
 112          //      displayshumaguan(3,Single_ReadI2C(0xae,4));


C51 COMPILER V9.00   I2C                                                                   08/09/2015 16:36:32 PAGE 3   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    323    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      10
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
