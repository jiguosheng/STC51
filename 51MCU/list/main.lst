C51 COMPILER V9.00   MAIN                                                                  04/23/2016 15:11:57 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN ..\Output\main.obj
COMPILER INVOKED BY: D:\keil c51\C51\BIN\C51.EXE ..\src\main.c LARGE BROWSE INCDIR(..\inc;D:\keil c51\C51\INC) DEBUG OBJ
                    -ECTEXTEND PRINT(..\list\main.lst) OBJECT(..\Output\main.obj)

line level    source

   1          #include <Var.h>
   2          
   3          unsigned char i = 0; //
   4          unsigned char k = 1; //
   5          
   6          void main()
   7          {  
   8   1              MCU_Init();
   9   1                      
  10   1              while(1)
  11   1              {               
  12   2      //              MMA7660(M_GZ);
  13   2      //
  14   2      //              WDT_CONTR |= 0x10;      
  15   2                      i++;
  16   2                      k++;
  17   2                      if(i > 9)
  18   2                              i = 0;
  19   2                      if(k > 4)
  20   2                              k = 1;
  21   2                      displayshumaguan(k,i);
  22   2                      delay_ms(50,1);
  23   2                      delay_ms(50,1);
  24   2                      delay_ms(50,1);
  25   2                      delay_ms(50,1);                 
  26   2              }
  27   1      }
  28          
  29          //void INT0() interrupt 0
  30          //{
  31          //
  32          //} 
  33          
  34          //void T0_ISR() interrupt 1
  35          //{
  36          //      /*TL0 = (65535-Fosc/12*ms*1000)%256;//)%256;            //设置定时初值
  37          //      TH0 = (65535-Fosc/12*ms*1000)/256;//)/256;              //设置定时初值*/
  38          //
  39          //}
  40          
  41          //void INT1() interrupt 2
  42          //{
  43          //
  44          //}
  45          
  46          //void T1_ISR() interrupt 3
  47          //{
  48          //      TL1 = (65535-Fosc/12*4*1000)%256;               //设置定时初值
  49          //      TH1 = (65535-Fosc/12*4*1000)/256;               //设置定时初值
  50          //
  51          //}
  52          
  53          void Uart1() interrupt 4
  54          {
C51 COMPILER V9.00   MAIN                                                                  04/23/2016 15:11:57 PAGE 2   

  55   1              static unsigned char count = 0;
  56   1      
  57   1              if(RI)
  58   1              {
  59   2                      RI = 0;
  60   2                      if(SBUF == 0x7F)
  61   2                      {
  62   3                              count++;
  63   3                              if(count == 5)
  64   3                              {
  65   4                                      count = 0;
  66   4                                      IAP_CONTR = 0x60;  //单片机遇到程序下载命令字后，单片机复位。这样不需要按键复位了。
  67   4                              }
  68   3                      }
  69   2                      else
  70   2                      {
  71   3                              count = 0;
  72   3      
  73   3                      }
  74   2              }
  75   1      }
  76          
  77          //void LVD() interrupt 6
  78          //{
  79          //      PCON &= 0xdf;   //清除LVD标志位
  80          //}
  81          
  82          //void PCA_Interrupt() interrupt 7
  83          //{
  84          //      /*CCF0 = 0;
  85          //      CCF1 = 0;*/
  86          //
  87          //} 
  88          
  89          //void PCA_isr() interrupt 7                                            //高速脉冲输出
  90          //{
  91          //    /*CCF0 = 0;                       //Clear interrupt flag
  92          //    CCAP0L = (unsigned char)(Fosc*1000000/(4*f)+0.5);
  93          //      CCAP1L = (unsigned char)(Fosc*1000000/(4*f)+0.5); */
  94          //}
  95          
  96          //void Uart2() interrupt 8
  97          //{
  98          //      if (S2CON & S2RI)
  99          //    {
 100          //        S2CON &= ~S2RI;     //Clear receive interrupt flag
 101          //         = S2BUF;         //P0 show UART data
 102          //    } 
 103          //}
 104          
 105          //void SPI() interrupt 9
 106          //{
 107          //      /*SPSTAT = SPIF | WCOL;       //clear SPI status                         //互为主从
 108          //    if (MSSEL)
 109          //    {
 110          //        SPCTL = SPEN;           //reset as slave
 111          //        MSSEL = 0;
 112          //        SPISS = 1;              //push high slave SS
 113          //        SendUart(SPDAT);        //return received SPI data
 114          //    }
 115          //    else
 116          //    {                           //for salve (receive SPI data from master and
C51 COMPILER V9.00   MAIN                                                                  04/23/2016 15:11:57 PAGE 3   

 117          //        SPDAT = SPDAT;                //           send previous SPI data to master)
 118          //    } */
 119          //      /*
 120          //      SPSTAT = SPIF | WCOL;       //clear SPI status                          //单主单从
 121          //      #ifdef MASTER
 122          //      SPISS = 1;                  //push high slave SS
 123          //      SendUart(SPDAT);            //return received SPI data
 124          //      #else                                                   //for salve (receive SPI data from master and
 125          //      SPDAT = SPDAT;              //           send previous SPI data to master)
 126          //      #endif
 127          //      */
 128          //}


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    128    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      3    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
